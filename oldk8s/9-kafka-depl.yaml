apiVersion: v1
kind: Service
metadata:
  name: ticketing-kafka-svc
  labels:
    app: ticketing-kafka
spec:
  ports:
  - port: 9092
    targetPort: 9092
    name: ticketing-kafka-port
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ticketing-kafka
  labels:
    app: ticketing-kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ticketing-kafka
  serviceName: ticketing-kafka-svc
  template:
    metadata:
      name: ticketing-kafka
      labels:
        app: ticketing-kafka
    spec:
      initContainers:
      containers:
        - name: ticketing-kafka
          image: wurstmeister/kafka
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 9092
            name: kafka
          env:
          - name: BROKER_ID
            value: "1"
          - name: HOSTNAME_COMMAND
            value: hostname
          - name: KAFKA_LISTENERS
            value: PLAINTEXT://:9092
          - name: KAFKA_ADVERTISED_LISTENERS
            value: PLAINTEXT://_{HOSTNAME_COMMAND}.ticketing-kafka-svc:9092
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: ticketing-zookeeper-svc:2181
          - name: KAFKA_CLEANUP_POLICY
            value: "compact"
          volumeMounts:
          - name: ticketing-kafka-storage
            mountPath: /kafka
  volumeClaimTemplates:
    - metadata:
        name: ticketing-kafka-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 50Mi